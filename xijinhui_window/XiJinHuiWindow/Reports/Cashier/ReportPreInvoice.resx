<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Value" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.Zoom" type="System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>2</value>
  </metadata>
  <metadata name="$this.ShowSnapGrid" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>